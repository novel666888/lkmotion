<?php
namespace passenger\controllers;

use common\jobs\ins;
use common\services\traits\PublicMethodTrait;
use common\services\YesinCarHttpClient;
use common\util\Common;
use common\util\Json;
use Yii;
use yii\base\UserException;
use yii\filters\Cors;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\models\LoginForm;

/**
 * Site controller
 */
class SiteController extends Controller
{
    use PublicMethodTrait;
    /**
     * @inheritdoc
     */
//    public function behaviors()
//    {
//        return [
//            'access' => [
//                'class' => AccessControl::className(),
//                'rules' => [
//                    [
//                        'actions' => ['login', 'error'],
//                        'allow' => true,
//                    ],
//                    [
//                        'actions' => ['logout', 'index'],
//                        'allow' => true,
//                        'roles' => ['@'],
//                    ],
//                ],
//            ],
//            'verbs' => [
//                'class' => VerbFilter::className(),
//                'actions' => [
//                    'logout' => ['post'],
//                ],
//            ],
//        ];
//    }
    public function behaviors()
    {
        $behaviors =  parent::behaviors(); // TODO: Change the autogenerated stub
        unset($behaviors['authenticator']);

        $behaviors['corsFilter'] = [
            'class'=>Cors::className(),
            'cors'=>[
                'Origin' => ['*'],
                'Access-Control-Request-Method'=>['*'],
                'Access-Control-Request-Headers'=>['*'],
                'Access-Control-Allow-Credentials'=>true,
                'Access-Control-Max-Age'=>3600,
                'Access-Control-Expose-Headers'=>['X-Pagination-Current-Page'],
            ],
        ];

        /*$behaviors['contentNegotiator'] = [
            'class'=>ContentNegotiator::className(),
            'formats'=>[
                'application/json'=>Response::FORMAT_JSON
            ]
        ];*/
        return $behaviors;
    }

    /**
     * @inheritdoc
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'getOssToken' => 'common\actions\OssSecurityTokenAction',
        ];
    }
    

    /**
     * Displays homepage.
     *
     * @return array
     */
    public function actionIndex()
    {
        return Json::success();
    }

    /**
     * @return array
     * @throws \Throwable
     */

    public function actionRecruitDriver()
    {
        $request = \Yii::$app->getRequest();
        $username = $request->post('username');
        $gender= $request->post('gender');
        $idCardNumber = $request->post('idCardNumber');
        $driveAge = $request->post('driveAge');
        $telephoneNumber = $request->post('telephoneNumber');
        $genderText = $gender == 0?'女':'男';
        try{
            if(strlen($idCardNumber)!=18){
                throw new UserException('身份号码有误');
            }
            if(!Common::checkPhoneNum($telephoneNumber)){
                throw new UserException('电话号码有误,请重新输入!');
            }
            $contentPattern = <<<EOT
            <p>
            姓名:%s<br/>
            性别:%s</br>
            身份证号码:%s<br/>
            驾龄:%s<br/>
            电话:%s<br/>
            </p>
EOT;
            $mailContent = sprintf($contentPattern,$username,$genderText,$idCardNumber,$driveAge,$telephoneNumber);
            Common::mail($mailContent,\Yii::$app->params['inBoxEmail'],'司机报名');
            return Json::success();
        }catch (UserException $exception){
            return $this->renderErrorJson($exception);
        }catch (\Throwable $ex){
            throw $ex;
        }
    }


}
